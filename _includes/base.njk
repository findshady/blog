<!DOCTYPE html>
<html lang="en" class="dark">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>{{ title }} | shady</title>
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=DejaVu+Sans+Mono:wght@400;700&family=Fira+Code:wght@700&family=Monaspace+Neon&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="/assets/css/styles.css">
</head>
<body>

  <header class="site-header">
    <nav class="navbar">
      <a class="logo" href="/">Home</a>
      <div class="nav-links">
        <a href="/author/">Authors</a>
        <a href="https://cryptonitemit.in/" target="_blank" rel="noopener">Team</a>
        <button class="theme-toggle" id="themeToggle" aria-label="Toggle theme"><span id="themeIcon">∅</span></button>
      </div>
    </nav>
  </header>

  {% if tags and 'posts' in tags %}
    <div class="post-layout">
      <aside class="post-sidebar">
        <div class="table-of-contents">
          <h4>Outline</h4>
          {{ content | toc | safe }}
        </div>
      </aside>
      <main class="post-content">
        <div class="post-hero">
          <h1>{{ title }}</h1>
          <div class="post-meta"><span>{{ date | postDate }}</span></div>
        </div>
        <article>{{ content | safe }}</article>
      </main>
    </div>
  {% else %}
    <main class="content-standard">{{ content | safe }}</main>
  {% endif %}

  <footer class="site-footer-bottom">
    <div class="social-icons">
      <a href="https://github.com/findshady" target="_blank" rel="noopener">{% include "icons/github.svg" %}</a>
      <a href="https://www.linkedin.com/in/suraj-dhondale/" target="_blank" rel="noopener">{% include "icons/linkedin.svg" %}</a>
      <a href="https://open.spotify.com/user/c52qc2nmp7ttyhaykm4roch79?si=cbd1e76703b34d9d" target="_blank" rel="noopener">{% include "icons/spotify.svg" %}</a>
      <a href="mailto:surxj666@gmail.com">{% include "icons/email.svg" %}</a>
    </div>
    <div class="footer-text">© {{ site.currentYear }} All rights reserved.</div>
  </footer>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      // --- THEME TOGGLE SCRIPT (WORKING) ---
      (function() {
        const toggle = document.getElementById('themeToggle');
        if (!toggle) return;
        const icon = toggle.querySelector('#themeIcon');
        const themes = { light: 'light', dark: 'dark' };
        const icons = { [themes.light]: '⋆', [themes.dark]: '∅' };
        let currentTheme = 'dark'; // Default to dark
        const applyTheme = (theme) => { document.documentElement.className = theme; if (icon) icon.textContent = icons[theme]; localStorage.setItem('theme', theme) };
        applyTheme(localStorage.getItem('theme') || currentTheme);
        toggle.addEventListener('click', () => { currentTheme = document.documentElement.classList.contains(themes.light) ? themes.dark : themes.light; applyTheme(currentTheme); });
      })();

      // --- DYNAMIC TABLE OF CONTENTS (REWRITTEN & WORKING) ---
      (function() {
        const tocLinks = document.querySelectorAll('.toc-list a');
        if (tocLinks.length === 0) return;
        const headings = Array.from(tocLinks).map(link => document.getElementById(decodeURIComponent(link.getAttribute('href').substring(1)))).filter(Boolean);
        if (headings.length === 0) return;

        const observer = new IntersectionObserver(entries => {
          headings.forEach(heading => {
            const id = heading.getAttribute('id');
            const tocLink = document.querySelector(`.toc-list a[href="#${encodeURIComponent(id)}"]`);
            if (tocLink) tocLink.classList.remove('active');
          });

          const visibleHeadings = entries.filter(e => e.isIntersecting);
          if (visibleHeadings.length > 0) {
            const topHeading = visibleHeadings.reduce((prev, current) => {
              return prev.boundingClientRect.top < current.boundingClientRect.top ? prev : current;
            });
            const id = topHeading.target.getAttribute('id');
            const activeLink = document.querySelector(`.toc-list a[href="#${encodeURIComponent(id)}"]`);
            if (activeLink) activeLink.classList.add('active');
          }
        }, { rootMargin: '-80px 0px -70% 0px' });

        headings.forEach(heading => observer.observe(heading));
      })();
    });
  </script>
</body>
</html>