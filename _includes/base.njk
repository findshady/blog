<!DOCTYPE html>
<html lang="en" class="dark">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>{{ title }} | shady</title>
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  {# --- THE FINAL, CORRECT FONT LINK --- #}
  <link href="https://fonts.googleapis.com/css2?family=DejaVu+Sans+Mono:wght@400;700&family=Monaspace+Neon:wght@400;700&family=Paytone+One&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="/assets/css/styles.css">
</head>
<body>

  <header class="site-header">
    <nav class="navbar">
      <a class="logo" href="/">Home</a>
      <div class="nav-links">
        <a href="/author/">Authors</a>
        <a href="#">About</a>
        <a href="#">Archive</a>
        <button class="theme-toggle" id="themeToggle" aria-label="Toggle theme">
          <span id="themeIcon">∅</span>
        </button>
      </div>
    </nav>
  </header>

  {% if tags and 'posts' in tags %}
    <div class="post-layout">
      <aside class="post-sidebar">
        <div class="table-of-contents">
          <h4>Outline</h4>
          {{ content | toc | safe }}
        </div>
      </aside>
      <main class="post-content">
        <div class="post-hero">
          <h1>{{ title }}</h1>
          <div class="post-meta">
            <span>{{ date | postDate }}</span>
          </div>
        </div>
        <article>
          {{ content | safe }}
        </article>
      </main>
    </div>
  {% else %}
    <main class="content-standard">
      {{ content | safe }}
    </main>
  {% endif %}

  <footer class="site-footer-bottom">
    <div class="social-icons">
      <a href="https://github.com/findshady" target="_blank" rel="noopener" aria-label="GitHub">{% include "icons/github.svg" %}</a>
      <a href="https://www.linkedin.com/in/suraj-dhondale/" target="_blank" rel="noopener" aria-label="LinkedIn">{% include "icons/linkedin.svg" %}</a>
      <a href="https://open.spotify.com/user/c52qc2nmp7ttyhaykm4roch79?si=cbd1e76703b34d9d" target="_blank" rel="noopener" aria-label="Spotify">{% include "icons/spotify.svg" %}</a>
      <a href="mailto:surxj666@gmail.com" aria-label="Email"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M22 6c0-1.1-.9-2-2-2H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6zm-2 0l-8 5-8-5h16zm0 12H4V8l8 5 8-5v10z"/></svg></a>
    </div>
    <div class="footer-text">© {{ site.currentYear }} All rights reserved.</div>
  </footer>

  {# --- ALL CUSTOM JAVASCRIPT IS HERE --- #}
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      // --- THEME TOGGLE SCRIPT ---
      const themeToggle = {
        init() {
          const toggle = document.getElementById('themeToggle');
          const icon = document.getElementById('themeIcon');
          const themes = { light: 'light', dark: 'dark' };
          const icons = { [themes.light]: '⋆', [themes.dark]: '∅' };
          const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
          let currentTheme = localStorage.getItem('theme') || (prefersDark ? themes.dark : themes.light);
          
          this.applyTheme(currentTheme, themes, icons, icon);
          
          toggle.addEventListener('click', () => {
            currentTheme = document.documentElement.classList.contains(themes.light) ? themes.dark : themes.light;
            this.applyTheme(currentTheme, themes, icons, icon);
          });
        },
        applyTheme(theme, themes, icons, icon) {
          document.documentElement.className = theme;
          if (icon) icon.textContent = icons[theme];
          localStorage.setItem('theme', theme);
        }
      };
      themeToggle.init();

      // --- DYNAMIC TABLE OF CONTENTS ---
      const toc = {
        init() {
          const tocLinks = document.querySelectorAll('.toc-list a');
          const headings = Array.from(tocLinks).map(link => document.getElementById(link.getAttribute('href').substring(1)));
          
          if (headings.length === 0) return;

          const observer = new IntersectionObserver(entries => {
            entries.forEach(entry => {
              const id = entry.target.getAttribute('id');
              const tocLink = document.querySelector(`.toc-list a[href="#${id}"]`);
              if (entry.isIntersecting) {
                tocLinks.forEach(link => link.classList.remove('active'));
                tocLink.classList.add('active');
              }
            });
          }, { rootMargin: '0px 0px -80% 0px' });

          headings.forEach(heading => {
            if (heading) observer.observe(heading);
          });
        }
      };
      toc.init();

      // --- COLLAPSIBLE CODE BLOCKS ---
      const codeBlocks = {
        init(lineThreshold = 20) {
          document.querySelectorAll('pre[class*="language-"]').forEach(pre => {
            const lines = pre.querySelector('code').textContent.split('\n').length;
            if (lines > lineThreshold) {
              this.makeCollapsible(pre, lines, lineThreshold);
            }
          });
        },
        makeCollapsible(pre, lines, lineThreshold) {
          pre.classList.add('collapsible', 'collapsed');

          const collapsedCount = lines - 15;
          const overlay = document.createElement('div');
          overlay.className = 'collapse-overlay';
          overlay.innerHTML = `
            <div class="collapse-line"></div>
            <span>${collapsedCount} collapsed lines</span>
            <button class="collapse-button">
              <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M11 12.5a.5.5 0 0 1-1 0V3.5a.5.5 0 0 1 1 0v9zm0 5.5a.5.5 0 0 1-1 0v-1.5a.5.5 0 0 1 1 0v1.5z"/><path d="M12.5 11a.5.5 0 0 0 0 1h9a.5.5 0 0 0 0-1h-9zm5.5 0a.5.5 0 0 0 0 1h1.5a.5.5 0 0 0 0-1h-1.5z"/></svg>
            </button>
          `;
          
          pre.appendChild(overlay);

          overlay.addEventListener('click', () => {
            pre.classList.remove('collapsed');
            overlay.remove();
          });
        }
      };
      codeBlocks.init();
    });
  </script>

</body>
</html>